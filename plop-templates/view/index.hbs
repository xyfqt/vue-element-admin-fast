{{#if template}}
<template>
  <div class="app-container">

    <!--    搜索开始区域-->
    <div class="search-fold-icon" @click="foldSearch()" v-show="showFold" :style="{top:foldTop}">
      <i class="el-icon-s-fold icon" :style="foldStyle"></i>
    </div>
    <div class="search-area-class" :style="foldContainerStyle">
      <search-area :query-params.sync="queryParams" :query-item="queryItem" @search="search">
        <template v-slot:diybtn="params">
          <el-button type="primary" plain  :loading="downloadLoading" @click="handleDownload" >导出</el-button>
        </template>
      </search-area>
    </div>

    <!--    表格开始区域-->
    <div class="table-area" ref="tabArea">
      <el-table
        v-loading="listLoading"
        element-loading-text="拼命加载中"
        :data="dataList"
        ref="dataTable"
        border
        fit
        highlight-current-row
        :row-key="rowKey"
        :max-height="maxHeight"
        @selection-change="handleSelectionChange">
        <el-table-column label="广告ID" align="center" prop="id" />
        <el-table-column label="排序" align="center" prop="weight" />
        <el-table-column label="广告名称" align="center" prop="name" />
        <el-table-column label="广告位类型" align="center" prop="typeStr" />
        <el-table-column label="广告图" align="center" prop="pic" width="270" />
        <el-table-column label="平台" align="center" prop="platform" />
        <el-table-column label="是否需要授权" align="center" prop="isTbAuth" />
        <el-table-column label="启用时间" align="center" prop="starttimeStr" width="155" />
        <el-table-column label="状态" align="center" prop="stateStr" />
        <el-table-column label="创建时间" align="center" prop="createtimeStr" width="160" />
        <el-table-column label="操作" align="center"  >
          <template slot-scope="{row}">
              <el-button type="primary" size="mini" @click="updateItem(row)">编辑</el-button>
              <el-button type="danger" size="mini" @click="deleteItem(row)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <div v-show="total>0" class="pagination">
      <el-pagination
        background
        :page-size="size"
        :current-page="currentPage"
        layout="total,sizes,prev, pager, next, jumper"
        :total="total"
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
      />
    </div>

    <!--    弹框处理区域-->
    <el-dialog title="编辑" :visible.sync="dialogVisible">


      <el-form ref="ruleForm" :rules="rules" :model="ruleForm" label-width="120px" class="demo-ruleForm">
        <el-form-item label="封禁原因" prop="ban_reason">
          <el-select v-model="ruleForm.ban_reason" placeholder="请选择封禁原因">
            <el-option label="头像、资料作假" value="头像、资料作假"></el-option>
            <el-option label="广告、营销" value="广告、营销"></el-option>
            <el-option label="诈骗、托儿" value="诈骗、托儿"></el-option>
            <el-option label="色情低俗" value="色情低俗"></el-option>
            <el-option label="恶意骚扰、不文明语言" value="恶意骚扰、不文明语言"></el-option>
          </el-select>
        </el-form-item>
        <el-form-item label="封禁方式" prop="deal_way">
          <el-radio-group v-model="ruleForm.deal_way">
            <el-radio label="1">时长封禁</el-radio>
            <el-radio label="2">永久封禁</el-radio>
            <el-radio label="3">不予处理</el-radio>
          </el-radio-group>
        </el-form-item>
        <el-form-item prop="ban_duration" v-if="ruleForm.deal_way == 1">
          <el-input type="number" v-model="ruleForm.ban_duration" placeholder="请输入封禁时长" clearable />
        </el-form-item>
      </el-form>

      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="confirm">确 定</el-button>
        <el-button @click="dialogVisible = false">关 闭</el-button>
      </span>
    </el-dialog>

  </div>
</template>
{{/if}}

{{#if script}}
<script>
  import SearchArea from "@/components/SearchArea";
  import tableMixin from "@/mixins/tableMixin";
  import {{ name }}Api from "@/api/{{dir}}/{{ name }}";
  let TableMixin = new tableMixin("");

  export default {
    name: "{{ properCase name }}",
    mixins: [TableMixin],
    components: {
      SearchArea,
    },
    data() {
      return {
        queryParams: {
          keyWord: "",
          state: "",
          date: "",
          startTime: "",
          endTime: "",
        },
        queryItem: [
          { type: 'input', column: 'keyWord', placeholder: '订单号/子订单号/会员昵称/会员ID' },
          {
            type: 'select', column: 'state', placeholder: '订单状态',
            option: [
              { key: '12', value: '已付款' },
              { key: '14', value: '已收货' },
              { key: '3', value: '已结算' },
              { key: '13', value: '已失效' }
            ]
          },
          { type: 'doubleDate', column: 'date', placeholder: ['付款开始时间', '付款结束时间'] }
        ],
        dialogVisible:false,
        ruleForm: {
          deal_way: '',
          ban_reason: '',
          ban_duration: ''
        },
        rules: {
          ban_reason: [
            { required: true, message: '请选择封禁原因', trigger: 'change' }
          ],
          deal_way: [
            { required: true, message: '请选择封禁方式', trigger: 'change' }
          ],
          ban_duration: [
            { required: true, message: '请输入封禁时长', trigger: 'blur' }
          ]
        },
      };
    },
    created() {
      this.resetQueryParams = this.$utils.deepClone(this.queryParams);
    },
    methods: {
      updateItem(row){
        this.dialogVisible = true;
        this.$nextTick(()=>{
          this.$refs.ruleForm.clearValidate();
        })
      },
      confirm(){
        this.$refs.ruleForm.validate((valid) => {
          if (valid) {
          {{ name }}Api.update{{ properCase name }}({ ...this.ruleForm, user_id: this.rowId }).then(res => {
            if(res.code == 200){
              this.$notify.success({title:"提示",message:"更新成功"})
              this.dialogVisible=false;
              this.getDataList();
            }
          })
          }
        })
      },
      deleteItem(row){
        this.$confirm('是否删除用户?', '提示', {
          confirmButtonText: '确定',
          cancelButtonText: '取消',
          type: 'warning'
        }).then(() => {
          {{ name }}Api.delete{{ properCase name }}({ ...this.ruleForm, user_id: this.rowId }).then(res => {
            if(res.code == 200){
              this.$notify.success({title:"提示",message:"封禁成功"})
              this.getDataList();
            }
          })
        }).catch(() => {})
      },
      getDataList() {
        this.listLoading = true;
        const params = this.$utils.deepClone(this.queryParams);
        params.startTime = this.$utils.searchTimeFormat(this.queryParams.date).start;
        params.endTime = this.$utils.searchTimeFormat(this.queryParams.date).end;
        delete params["date"];
        {{ name }}Api.{{ name }}List({
          pageNo: this.currentPage,
          pageSize: this.size,
          ...params,
        }).then((res) => {
          this.listLoading = false;
          this.dataList = res.data.list;
          this.total = res.data.total;
        });
      },
    },
  };

</script>
{{/if}}

{{#if style}}
<style lang="scss" scoped>

</style>
{{/if}}
